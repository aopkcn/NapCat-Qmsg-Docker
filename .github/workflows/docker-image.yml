name: Docker 镜像 CI

on:
  push:
    paths:
      - 'Dockerfile'
      - 'entrypoint.sh'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: 检出代码
      uses: actions/checkout@v4

    - name: 构建镜像
      run: |
        REPOSITORY_NAME="napcat"
        IMAGE_TAG="qmsg"
        docker build -t $REPOSITORY_NAME:$IMAGE_TAG .

    - name: 推送到 GitHub 容器注册表
      env:
        GHCR_USERNAME: ${{ secrets.GHCR_USERNAME }}
        GHCR_KEY: ${{ secrets.GHCR_KEY }}
        REPOSITORY_NAME: "napcat"
        IMAGE_TAG: "qmsg"
      run: |
        echo "${GHCR_KEY}" | docker login ghcr.io -u "${GHCR_USERNAME}" --password-stdin
        GHCR_IMAGE_TAG="ghcr.io/${GHCR_USERNAME}/${REPOSITORY_NAME}:${IMAGE_TAG}"
        docker tag "${REPOSITORY_NAME}:${IMAGE_TAG}" "${GHCR_IMAGE_TAG}"
        docker push "${GHCR_IMAGE_TAG}"

    - name: 推送到 Docker Hub
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWD: ${{ secrets.DOCKER_PASSWD }}
        REPOSITORY_NAME: "napcat"
        IMAGE_TAG: "qmsg"
      run: |
        echo "${DOCKER_PASSWD}" | docker login docker.io -u "${DOCKER_USERNAME}" --password-stdin
        DOCKER_IMAGE_TAG="docker.io/${DOCKER_USERNAME}/${REPOSITORY_NAME}:${IMAGE_TAG}"
        docker tag "${REPOSITORY_NAME}:${IMAGE_TAG}" "${DOCKER_IMAGE_TAG}"
        docker push "${DOCKER_IMAGE_TAG}"

    - name: 推送到阿里云容器镜像服务
      env:
        ALICLOUD_USERNAME: ${{ secrets.ALICLOUD_USERNAME }}
        ALICLOUD_PASSWORD: ${{ secrets.ALICLOUD_PASSWORD }}
        ALICLOUD_REGISTRY: ${{ secrets.ALICLOUD_REGISTRY }}
        ALICLOUD_NAMESPACE: ${{ secrets.ALICLOUD_NAMESPACE }}
        REPOSITORY_NAME: "napcat"
        IMAGE_TAG: "qmsg"
      run: |
        echo "${ALICLOUD_PASSWORD}" | docker login "${ALICLOUD_REGISTRY}" -u "${ALICLOUD_USERNAME}" --password-stdin
        ALICLOUD_IMAGE_TAG="${ALICLOUD_REGISTRY}/${ALICLOUD_NAMESPACE}/${REPOSITORY_NAME}:${IMAGE_TAG}"
        docker tag "${REPOSITORY_NAME}:${IMAGE_TAG}" "${ALICLOUD_IMAGE_TAG}"
        docker push "${ALICLOUD_IMAGE_TAG}"
